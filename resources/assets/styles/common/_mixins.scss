//Rounder corner shadow box
@mixin shadowBox {
    border: 1px solid #c5c7ce;
    border-radius: 5px;
    box-shadow: 4px 4px 0 rgba(6, 41, 66, 0.07);
}

//clear all
@mixin clearBoth {
    visibility: hidden;
    display: block;
    content: " ";
    clear: both;
    height: 0;
}

@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

@mixin fluid-prop($prop-name, $min-width, $max-width, $min-prop-value, $max-prop-value) {
    $base-unit: unit($min-width);

    @if $base-unit == unit($max-width) and ($base-unit == unit($min-prop-value) or $min-prop-value == 0) and $base-unit == unit($max-prop-value) {
        & {
            #{$prop-name}: $min-prop-value;

            @media screen and (min-width: $min-width) {
                #{$prop-name}: calc(#{$min-prop-value} + #{strip-unit($max-prop-value - $min-prop-value)} * ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)}));
            }

            @media screen and (min-width: $max-width) {
                #{$prop-name}: $max-prop-value;
            }
        }
    }
}

@mixin clearfix {
    &::after {
        display: block;
        content: "";
        clear: both;
    }
}

@mixin optional-at-root($sel) {
    @at-root #{if(not &, $sel, selector-append(&, $sel))} {
        @content;
    }
}

@mixin placeholder {
    @include optional-at-root('::-webkit-input-placeholder') {
        @content;
    }

    @include optional-at-root(':-moz-placeholder') {
        @content;
    }

    @include optional-at-root('::-moz-placeholder') {
        @content;
    }

    @include optional-at-root(':-ms-input-placeholder') {
        @content;
    }
}
